default_platform(:ios)

DEVELOPER_APP_ID = ENV["DEVELOPER_APP_ID"]
DEVELOPER_APP_IDENTIFIER = ENV["DEVELOPER_APP_IDENTIFIER"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]
GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

def prepare_environment
#   sh("rm -rf ~/Library/Developer/Xcode/Archives/**")
#   sh("rm -rf ~/Library/MobileDevice/Provisioning\\ Profiles/**")

#   reset_git_repo(force: true)
#   clear_derived_data

  sh("cp ../UnstoppableWallet/UnstoppableWallet/Configuration/Development.template.xcconfig ../UnstoppableWallet/UnstoppableWallet/Configuration/Development.xcconfig")
  sh("cp ../UnstoppableWallet/UnstoppableWallet/Configuration/Production.template.xcconfig ../UnstoppableWallet/UnstoppableWallet/Configuration/Production.xcconfig")

  increment_build_number(xcodeproj: "./UnstoppableWallet/UnstoppableWallet.xcodeproj")

#   cocoapods(repo_update: true)
  cocoapods(clean_install: true)
end

platform :ios do
#     lane :dev_t do
#       prepare_environment
#
#       cert(username: ENV['ITUNES_CONNECT_USERNAME'], team_id: options[:dp_team_id])
#       sigh(app_identifier: "io.horizontalsystems.bank-wallet.dev.testnet", force: true, adhoc: true, username: ENV['ITUNES_CONNECT_USERNAME'], team_id: options[:dp_team_id])
#       gym(scheme: "Unstoppable Dev T", export_method: "ad-hoc", silent: true, clean: true, export_options: { compileBitcode: false })
#
#       upload_to_app_center(options[:app_center_api_token], "Unstoppable-T")
#     end

  lane :dev do
    keychain_name = TEMP_KEYCHAIN_USER
    keychain_password = TEMP_KEYCHAIN_PASSWORD
    ensure_temp_keychain(keychain_name, keychain_password)

    api_key = app_store_connect_api_key(
      key_id: APPLE_KEY_ID,
      issuer_id: APPLE_ISSUER_ID,
      key_content: APPLE_KEY_CONTENT,
      duration: 1200,
      in_house: false
    )

    prepare_environment

    match(
      type: 'adhoc',
      app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
      git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
      readonly: true,
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      api_key: api_key
    )

#     cert(username: ENV['ITUNES_CONNECT_USERNAME'], team_id: options[:dp_team_id])
#     sigh(app_identifier: "io.horizontalsystems.bank-wallet.dev", force: true, adhoc: true, username: ENV['ITUNES_CONNECT_USERNAME'], team_id: options[:dp_team_id])

    gym(
#       configuration: "Release",
#       workspace: "your_project_workspace.xcworkspace",
      scheme: "Unstoppable Dev",
      export_method: "ad-hoc",
      clean: true,
      export_options: {
        compileBitcode: false,
        provisioningProfiles: {
            DEVELOPER_APP_ID => PROVISIONING_PROFILE_SPECIFIER
        }
      }
    )
#     gym(scheme: "Unstoppable Dev", export_method: "ad-hoc", silent: true, clean: true, export_options: { compileBitcode: false })

#     upload_to_app_center(options[:app_center_api_token], "Unstoppable")

    delete_temp_keychain(keychain_name)
  end

#   def upload_to_app_center(api_token, app_name)
#     appcenter_upload(
#       api_token: api_token,
#       owner_name: "Horizontal-Systems",
#       owner_type: "organization",
#       app_name: app_name,
#       notify_testers: true,
#       release_notes: last_git_commit[:message]
#     )
#   end
end
